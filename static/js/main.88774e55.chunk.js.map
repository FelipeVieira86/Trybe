{"version":3,"sources":["data.js","components/Header.jsx","components/inputText.jsx","components/InputCB.jsx","components/InputSelect.jsx","components/SearchBar.jsx","components/Rating.jsx","components/MovieCard.jsx","components/MovieList.jsx","components/TextArea.jsx","components/InputNumber.jsx","components/AddMovie.jsx","components/MovieLibrary.jsx","App.js","serviceWorker.js","index.js"],"names":["movies","title","subtitle","storyline","rating","imagePath","bookmarked","genre","Header","className","React","Component","InputText","this","props","LT","v","oCFn","htmlFor","type","value","onChange","InputCB","c","checked","InputSelect","a","map","key","Math","random","text","SearchBar","onSearchTextChange","searchText","onSelectedGenreChange","selectedGenre","onBookmarkedChange","bookmarkedOnly","Rating","MovieCard","movie","alt","src","MovieList","TextArea","InputNumber","AddMovie","state","changeState","bind","changeNumberState","setState","name","target","Number","onClick","event","reset","MovieLibrary","BookmarkChange","addMovie","filter","includes","filterMovie","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.88774e55.chunk.js","sourcesContent":["const movies = [\n  {\n    title: 'Kingsglaive',\n    subtitle: 'Final Fantasy XV',\n    storyline: \"King Regis, who oversees the land of Lucis, commands his army of soldiers to protect the kingdom from the Niflheim empire's plans to steal the sacred crystal.\",\n    rating: 4.5,\n    imagePath: 'images/Kingsglaive_Final_Fantasy_XV.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Final Fantasy',\n    subtitle: 'Spirits Within',\n    storyline: 'A scientist makes a last stand on Earth with the help of a ragtag team of soldiers against an invasion of alien phantoms.',\n    rating: 4.5,\n    imagePath: 'images/Final_Fantasy_Spirits_Within.jpg',\n    bookmarked: false,\n    genre: 'fantasy',\n  },\n  {\n    title: 'Ghost In The Shell',\n    subtitle: 'Ghost In The Shell',\n    storyline: 'A hacker known as the Puppet Master is hunted by a female cyborg cop and her partner. This film is a revised version of Ghost in the Shell (1995).',\n    rating: 5,\n    imagePath: 'images/Ghost_In_The_Shell_2_0.jpg',\n    bookmarked: false,\n    genre: 'comedy',\n  },\n  {\n    title: 'Appleseed Alpha',\n    subtitle: 'Appleseed Alpha',\n    storyline: \"A young female soldier Deunan and her cyborg partner Briareos survive through the post World War 3 apocalyptic New York in search of human's future hope, the legendary city of Olympus.\",\n    rating: 3.8,\n    imagePath: 'images/Appleseed_Alpha.jpg',\n    bookmarked: true,\n    genre: 'action',\n  },\n  {\n    title: 'Resident Evil',\n    subtitle: 'Vendetta',\n    storyline: 'Chris Redfield enlists the help of Leon S. Kennedy and Rebecca Chambers to stop a death merchant, with a vengeance, from spreading a deadly virus in New York.',\n    rating: 4.2,\n    imagePath: 'images/Resident_Evil_Vendetta.jpg',\n    bookmarked: true,\n    genre: 'fantasy',\n  },\n];\n\nexport default movies;\n","import React from 'react';\n\nclass Header extends React.Component {\n  render() {\n    return (\n      <header className=\"movie-card-header\">\n        <h1 className=\"page-title\">Movie Cards Library</h1>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass InputText extends Component {\n  render() {\n    const { LT, v, oCFn } = this.props;\n    return (\n      <label htmlFor=\"text\">\n        {LT}\n        <input type=\"text\" value={v} onChange={oCFn} />\n      </label>\n    );\n  }\n}\n\nexport default InputText;\n","import React, { Component } from 'react';\n\nclass InputCB extends Component {\n  render() {\n    const { LT, c, oCFn } = this.props;\n    return (\n      <label htmlFor=\"select\">\n        {LT}\n        <input className=\"checkbox\" type=\"checkbox\" checked={c} onChange={oCFn} />\n      </label>\n    );\n  }\n}\n\nexport default InputCB;\n","import React, { Component } from 'react';\n\nclass InputSelect extends Component {\n  render() {\n    const { LT, v, oCFn, a } = this.props;\n    return (\n      <label htmlFor=\"select\">\n        {LT}\n        <select className=\"drop\" value={v} onChange={oCFn}>\n          {a.map((genre) => (\n            <option className=\"option\" key={Math.random() * 10} value={genre.value}>\n              {genre.text}\n            </option>\n          ))}\n        </select>\n      </label>\n    );\n  }\n}\n\nexport default InputSelect;\n","import React, { Component } from 'react';\nimport InputText from './inputText';\nimport InputCB from './InputCB';\nimport InpSel from './InputSelect';\n\nclass SearchBar extends Component {\n  render() {\n    const {\n      onSearchTextChange, searchText, onSelectedGenreChange, selectedGenre,\n      onBookmarkedChange, bookmarkedOnly,\n    } = this.props;\n    const gO = [\n      { text: 'Todos', value: '' },\n      { text: 'Ação', value: 'action' },\n      { text: 'Comédia', value: 'comedy' },\n      { text: 'Suspense', value: 'thriller' },\n    ];\n    return (\n      <form className=\"movie-card-search\">\n        <InputText LT=\"Inclui o texto\" v={searchText} oCFn={onSearchTextChange} />\n        <InputCB LT=\"Mostrar somente favoritos\" c={bookmarkedOnly} oCFn={onBookmarkedChange} />\n        <InpSel LT=\"Filtrar por gênero\" v={selectedGenre} oCFn={onSelectedGenreChange} a={gO} />\n      </form>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from 'react';\n\nclass Rating extends React.Component {\n  render() {\n    const { rating } = this.props;\n    return (\n      <div className=\"movie-card-rating\">\n        <span className=\"rating\">{rating}</span>\n      </div>\n    );\n  }\n}\n\nexport default Rating;\n","import React from 'react';\n\nimport Rating from './Rating';\n\nclass MovieCard extends React.Component {\n  render() {\n    const { movie } = this.props;\n    const { title, subtitle, storyline, rating, imagePath } = movie;\n    return (\n      <div className=\"movie-card\">\n        <img alt=\"Movie Cover\" className=\"movie-card-image\" src={imagePath} />\n        <div className=\"movie-card-body\">\n          <h4 className=\"movie-card-title\">{title}</h4>\n          <h5 className=\"movie-card-subtitle\">{subtitle}</h5>\n          <p className=\"movie-card-storyline\">{storyline}</p>\n        </div>\n        <Rating rating={rating} />\n      </div>\n    );\n  }\n}\n\nexport default MovieCard;\n","import React from 'react';\n\nimport MovieCard from './MovieCard';\n\nclass MovieList extends React.Component {\n  render() {\n    const { movies } = this.props;\n\n    return (\n      <div className=\"movie-list\">\n        {movies.map((movie) => <MovieCard key={movie.title} movie={movie} />)}\n      </div>\n    );\n  }\n}\n\nexport default MovieList;\n","import React, { Component } from 'react';\n\nclass TextArea extends Component {\n  render() {\n    const { LT, v, oCFn } = this.props;\n    return (\n      <label htmlFor=\"text\">\n        {LT}\n        <textarea type=\"text\" value={v} onChange={oCFn} />\n      </label>\n    );\n  }\n}\n\nexport default TextArea;\n","import React, { Component } from 'react';\n\nclass InputNumber extends Component {\n  render() {\n    const { LT, v, oCFn } = this.props;\n    return (\n      <label className=\"movie-rating\" htmlFor=\"text\">\n        {LT}\n        <input className=\"number\" type=\"number\" value={v} onChange={oCFn} />\n      </label>\n    );\n  }\n}\n\nexport default InputNumber;\n","import React, { Component } from 'react';\nimport InputText from './inputText';\nimport TextArea from './TextArea';\nimport InputNumber from './InputNumber';\nimport InputSelect from './InputSelect';\n\nclass AddMovie extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subtitle: '',\n      title: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    };\n    this.changeState = this.changeState.bind(this);\n    this.changeNumberState = this.changeNumberState.bind(this);\n  }\n\n  reset() {\n    this.setState({\n      title: '',\n      subtitle: '',\n      imagePath: '',\n      storyline: '',\n      rating: 0,\n      genre: 'action',\n    });\n  }\n\n  changeState({ target: { value } }, name) {\n    this.setState({ [name]: value });\n  }\n\n  changeNumberState({ target: { value } }, name) {\n    return this.setState({ [name]: Number(value) });\n  }\n\n  render() {\n    const { onClick } = this.props;\n    const { subtitle, title, imagePath, storyline, rating, genre } = this.state;\n    const gO = [\n      { value: 'action', text: 'Ação' }, { value: 'comedy', text: 'Comédia' }, { value: 'thriller', text: 'Suspense' },\n    ];\n\n    return (\n      <form className=\"add-movie\">\n        <div className=\"add-movie-div-1\">\n          <InputText LT=\"Título\" v={title} oCFn={(event) => this.changeState(event, 'title')} />\n          <InputText LT=\"Subtítulo\" v={subtitle} oCFn={(event) => this.changeState(event, 'subtitle')} />\n        </div>\n        <InputText LT=\"Imagem\" v={imagePath} oCFn={(event) => this.changeState(event, 'imagePath')} />\n        <TextArea LT=\"Sinopse\" v={storyline} oCFn={(event) => this.changeState(event, 'storyline')} />\n        <div className=\"add-movie-div-2\">\n          <InputNumber LT=\"Avaliação\" v={rating} oCFn={(event) => this.changeNumberState(event, 'rating')} />\n          <InputSelect LT=\"Gênero\" v={genre} a={gO} oCFn={(event) => this.changeState(event, 'genre')} />\n          <button type=\"button\" onClick={() => { onClick(this.state); this.reset(); }}>\n            Adicionar filme\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AddMovie;\n","import React, { Component } from 'react';\nimport SearchBar from './SearchBar';\nimport MovieList from './MovieList';\nimport AddMovie from './AddMovie';\n\nclass MovieLibrary extends Component {\n  constructor(props) {\n    super(props);\n    const { movies } = this.props;\n    this.state = { searchText: '', bookmarkedOnly: false, selectedGenre: '', movies };\n    this.BookmarkChange = this.BookmarkChange.bind(this);\n    this.addMovie = this.addMovie.bind(this);\n  }\n\n  BookmarkChange() {\n    const { bookmarkedOnly } = this.state;\n    this.setState({ bookmarkedOnly: !bookmarkedOnly });\n  }\n\n  filterMovie() {\n    const { searchText, bookmarkedOnly, selectedGenre, movies } = this.state;\n    if (bookmarkedOnly) return movies.filter((movie) => movie.bookmarked === true);\n    if (selectedGenre) return movies.filter((movie) => movie.genre === selectedGenre);\n    if (searchText) {\n      return movies.filter(\n        (movie) => movie.title.includes(searchText)\n          || movie.subtitle.includes(searchText)\n          || movie.storyline.includes(searchText),\n      );\n    }\n    return movies;\n  }\n\n  addMovie(movie) {\n    this.setState((state) => ({ movies: [...state.movies, movie] }));\n  }\n\n  render() {\n    const { searchText, bookmarkedOnly, selectedGenre } = this.state;\n    return (\n      <div>\n        <SearchBar\n          searchText={searchText}\n          bookmarkedOnly={bookmarkedOnly}\n          selectedGenre={selectedGenre}\n          onSearchTextChange={(event) => this.setState({ searchText: event.target.value })}\n          onBookmarkedChange={this.BookmarkChange}\n          onSelectedGenreChange={(event) => this.setState({ selectedGenre: event.target.value })}\n        />\n        <MovieList movies={this.filterMovie()} />\n        <AddMovie onClick={this.addMovie} />\n      </div>\n    );\n  }\n}\n\nexport default MovieLibrary;\n","import React from 'react';\nimport './App.css';\n\nimport movies from './data';\nimport Header from './components/Header';\nimport MovieLibrary from './components/MovieLibrary';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <MovieLibrary movies={movies} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}